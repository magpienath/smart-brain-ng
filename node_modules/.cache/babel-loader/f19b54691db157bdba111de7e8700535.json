{"ast":null,"code":"var _jsxFileName = \"/Users/lotto/Desktop/smart-brain-ng/src/App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/navigation/Navigation';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Logo from './components/logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\nconst initialState = {\n  input: '',\n  imageURL: '',\n  box: {},\n  route: 'SignIn',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageURL: this.state.input\n      });\n      fetch('https://tranquil-hamlet-51059.herokuapp.com/imageurl', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          input: this.state.input\n        })\n      }).then(response => response.json()).then(response => {\n        if (response) {\n          fetch('https://tranquil-hamlet-51059.herokuapp.com/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          }).catch(console.log);\n        }\n\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = initialState;\n  }\n\n  render() {\n    const _this$state = this.state,\n          isSignedIn = _this$state.isSignedIn,\n          imageURL = _this$state.imageURL,\n          route = _this$state.route,\n          box = _this$state.box;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesOptions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      isSignedIn: isSignedIn,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), route === 'home' ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(Rank, {\n      name: this.state.user.name,\n      entries: this.state.user.entries,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }), React.createElement(ImageLinkForm, {\n      onInputChange: this.onInputChange,\n      onButtonSubmit: this.onButtonSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(FaceRecognition, {\n      box: box,\n      imageURL: imageURL,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })) : route === 'SignIn' ? React.createElement(SignIn, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }) : React.createElement(Register, {\n      loadUser: this.loadUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/lotto/Desktop/smart-brain-ng/src/App.js"],"names":["React","Component","Particles","FaceRecognition","Navigation","SignIn","Register","Logo","ImageLinkForm","Rank","particlesOptions","particles","number","value","density","enable","value_area","initialState","input","imageURL","box","route","isSignedIn","user","id","name","email","entries","joined","App","constructor","loadUser","data","setState","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","onButtonSubmit","state","fetch","method","headers","body","JSON","stringify","then","response","json","count","Object","assign","catch","console","log","err","onRouteChange","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/navigation/Navigation';\nimport SignIn from './components/SignIn/SignIn';\nimport Register from './components/Register/Register';\nimport Logo from './components/logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\n\n\nconst particlesOptions = {\n    particles: {\n        number: {\n            value: 30,\n            density: {\n                enable: true,\n                value_area: 800\n            }\n        }\n    }         \n}\n\nconst initialState = {\n      input: '',\n      imageURL: '',\n      box: {},\n      route: 'SignIn',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        entries: 0,\n        joined: ''\n      }\n}\n\nclass App extends Component {\n  constructor() {\n      super();\n      this.state = initialState;\n  }\n\n    \nloadUser = (data) => {\n    this.setState({user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n        joined: data.joined        \n  }})\n}\n   \ncalculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - (clarifaiFace.right_col * width),\n        bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n}\n\ndisplayFaceBox = (box) => {\n    this.setState({box: box});\n}\n    \nonInputChange = (event) => {\n    this.setState({input: event.target.value});\n}\n\nonButtonSubmit = () => {\n    this.setState({imageURL: this.state.input});\n         fetch('https://tranquil-hamlet-51059.herokuapp.com/imageurl', {\n                method: 'post',\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify({\n                    input: this.state.input\n                })     \n            })\n       .then(response => response.json())\n       .then(response => {\n        if (response) {\n            fetch('https://tranquil-hamlet-51059.herokuapp.com/image', {\n                method: 'put',\n                headers: {'Content-Type': 'application/json'},\n                body: JSON.stringify({\n                    id: this.state.user.id\n                })     \n            }) \n            .then(response => response.json())\n            .then(count => {\n                this.setState(Object.assign(this.state.user, {entries: count}))\n            })\n            .catch(console.log);\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response))\n    })\n    .catch(err => console.log(err));\n}\n\nonRouteChange = (route) => {\n    if (route === 'signout') {\n        this.setState(initialState)\n    } else if (route === 'home') {\n        this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n}\n\n   render() {\n    const { isSignedIn, imageURL, route, box } = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className='particles'\n         params={particlesOptions}\n        />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        { route === 'home'\n            ? <div>\n                <Logo />\n                <Rank name={this.state.user.name} entries={this.state.user.entries} />\n                <ImageLinkForm \n                    onInputChange={this.onInputChange} \n                    onButtonSubmit={this.onButtonSubmit} \n                />\n                <FaceRecognition box={box} imageURL={imageURL} />\n              </div>\n            : (\n                route === 'SignIn'\n                ? <SignIn loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n                : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\n              )\n        }\n      </div>\n    );\n   }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}